# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined what is the average song key? 
SELECT SUM(song_key)/COUNT(artist_name) 
AS "AVG SONGKEY" FROM BIT_DB.Spotifydata



#Second I determined who are the top 5 artists based on popularity? 
SELECT artist_name, popularity 
FROM BIT_DB.Spotifydata
ORDER BY popularity 
DESC LIMIT 5


#Third what artist released the longest song? 
SELECT artist_name, duration_ms 
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC LIMIT 1


#Then what artist released the song with the most liveness? 
SELECT artist_name, 
track_name, 
liveness 
FROM BIT_DB.Spotifydata
ORDER BY liveness DESC LIMIT 1


#Lastly what's the average tempo for the 10 most popular songs?
SELECT SUM(tempo)/10 
AS "AVG TEMPO OF TOP 10 SONGS" FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10
